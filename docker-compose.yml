version: '3.5'

services:


  user:
    restart: always
    build: ./user-service
    ports:
      - 50052:50051
    environment:
      MICRO_SERVER_ADDRESS: ":50051"
      # DB_HOST: "mongodb://datastore:27017"

  web:
    restart: always
    build: ./user-service
    ports:
      - 50052:50051
    environment:
      MICRO_SERVER_ADDRESS: ":50051"
      # DB_HOST: "mongodb://datastore:27017"


  # mysql:
  #   image: mariadb:10.4
  #   restart: always
  #   ports:
  #       - 3306:3306
  #   networks:
  #       - mysql
  #   volumes:
  #     - my-db:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: somewordpress
  #     MYSQL_DATABASE: wordpress
  #     MYSQL_USER: wordpress
  #     MYSQL_PASSWORD: wordpress


  # # Services
  # consignment:
  #   restart: always
  #   build: ./shippy-service-consignment
  #   depends_on:
  #     - datastore
  #     - vessel
  #   links:
  #     - datastore
  #   ports:
  #     - 50051:50051
  #   environment:
  #     MICRO_SERVER_ADDRESS: ":50051"
  #     DB_HOST: "mongodb://datastore:27017"

  # vessel:
  #   restart: always
  #   build: ./shippy-service-vessel
  #   ports:
  #     - 50052:50051
  #   environment:
  #     MICRO_SERVER_ADDRESS: ":50051"
  #     DB_HOST: "mongodb://datastore:27017"

  

  # # Commands
  # cli:
  #   build: ./shippy-cli-consignment

  # user-cli:
  #   build: ./shippy-cli-user

  # # Database tier
  # datastore:
  #   image: mongo
  #   container_name: datastore
  #   environment:
  #     - MONGO_DATA_DIR=/data/db
  #     - MONGO_LOG_DIR=/dev/null
  #   volumes:
  #     - ./data/db:/data/db # ensures data persistence between restarting
  #   ports:
  #     - 27017:27017
  #   command: mongod --logpath=/dev/null

  # database:
  #   image: postgres:alpine
  #   environment:
  #     POSTGRES_PASSWORD: "password"
  #     POSTGRES_USER: "admin"
  #   ports:
  #     - 5432:5432

# secrets:
#   mysql_root_password:
#     file: ./.docker/secrets/mysql_root_password.txt
#   mysql_name:
#     file: ./.docker/secrets/mysql_name.txt
#   mysql_user:
#     file: ./.docker/secrets/mysql_user.txt
#   mysql_password:
#     file: ./.docker/secrets/mysql_password.txt
networks:
  mysql:
    driver: bridge
volumes:
  my-db: